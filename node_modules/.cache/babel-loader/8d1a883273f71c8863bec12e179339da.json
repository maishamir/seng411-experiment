{"ast":null,"code":"var _jsxFileName = \"/Users/maishamir/Documents/Web Dev /node/SENG411-HCI-Experiment/src/App.js\";\nimport React from 'react';\nimport { Block, Format } from './components/Block';\nimport Trial from './components/Trial';\nimport Introduction from './components/Introduction';\nimport EndScreen from './components/EndScreen';\nimport './App.css';\nimport axios from 'axios';\nimport 'dotenv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataSubmissionStatus = Object.freeze({\n  NOT_SUBMITTED: 1,\n  SUCCESFUL: 2,\n  FAILED: 3\n});\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.beginExperiment = event => {\n      if (event.keyCode === 13) {\n        var elem = event.srcElement || event.target;\n        this.groupCode = elem.value;\n        this.setState({\n          showIntro: false\n        });\n      }\n    };\n\n    this.onSpacebarClicked = event => {\n      if (this.state.showInstruction && (event.key === 'Spacebar' || event.key === ' ' || event.keyCode === 32)) {\n        this.setState({\n          showInstruction: false\n        });\n      }\n    };\n\n    this.advanceIteration = () => {\n      this.setState({\n        curentIteration: this.state.curentIteration + 1\n      });\n    };\n\n    this.advanceTrial = () => {\n      this.setState({\n        currentTrial: this.state.currentTrial + 1,\n        curentIteration: 1,\n        showInstruction: true\n      });\n    };\n\n    this.addResults = newResult => {\n      this.setState({\n        results: [...this.state.results, newResult]\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state.results);\n      axios.post(`${process.env.REACT_APP_GOOGLE_SHEETS}`, this.state.results).then(response => {\n        console.log(response);\n        this.setState({\n          dataSubmitted: DataSubmissionStatus.SUCCESFUL\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          dataSubmitted: DataSubmissionStatus.FAILED\n        });\n      });\n    };\n\n    this.whatToShow = () => {\n      if (this.state.showIntro) {\n        return /*#__PURE__*/_jsxDEV(Introduction, {\n          onBeginExperiment: this.beginExperiment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 20\n        }, this);\n      } else if (this.state.currentTrial === this.trialParameters.length) {\n        var submissionStatusObject = null;\n\n        if (this.state.dataSubmitted === DataSubmissionStatus.SUCCESFUL) {\n          submissionStatusObject = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'submittedSuccessfully',\n            children: \"Data submission complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this);\n        } else if (this.state.dataSubmitted === DataSubmissionStatus.FAILED) {\n          submissionStatusObject = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'submittedFailed',\n            children: \"Data submission failed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(EndScreen, {\n          results: this.state.results,\n          showSubmitButton: this.state.dataSubmitted === DataSubmissionStatus.NOT_SUBMITTED,\n          submissionStatusObject: submissionStatusObject,\n          onSubmit: this.submitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Trial, {\n          format: this.trialParameters[this.state.currentTrial].format,\n          n: this.trialParameters[this.state.currentTrial].n,\n          showInstruction: this.state.showInstruction,\n          instructType: this.trialParameters[this.state.currentTrial].instructType,\n          curentIteration: this.state.curentIteration,\n          children: /*#__PURE__*/_jsxDEV(Block, {\n            format: this.trialParameters[this.state.currentTrial].format,\n            n: this.trialParameters[this.state.currentTrial].n,\n            startTime: Date.now(),\n            curentIteration: this.state.curentIteration,\n            advanceIteration: this.advanceIteration,\n            experimentSeed: this.groupCode,\n            userID: this.userID,\n            addResults: this.addResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.state = {\n      currentTrial: 0,\n      showInstruction: true,\n      curentIteration: 1,\n      results: [],\n      showIntro: true,\n      dataSubmitted: DataSubmissionStatus.NOT_SUBMITTED\n    };\n    this.userID = Math.floor(Math.random() * 90000) + 10000;\n    this.groupCode = 0;\n    this.iterationPerTrial = 3;\n    this.trialParameters = [{\n      format: Format.TEXT,\n      n: 3,\n      instructType: 1\n    }, {\n      format: Format.TEXT,\n      n: 5,\n      instructType: 2\n    }, {\n      format: Format.TEXT,\n      n: 9,\n      instructType: 2\n    }, {\n      format: Format.TEXT,\n      n: 25,\n      instructType: 2\n    }, {\n      format: Format.BUBBLE,\n      n: 3,\n      instructType: 1\n    }, {\n      format: Format.BUBBLE,\n      n: 5,\n      instructType: 2\n    }, {\n      format: Format.BUBBLE,\n      n: 9,\n      instructType: 2\n    }, {\n      format: Format.BUBBLE,\n      n: 25,\n      instructType: 2\n    }];\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onSpacebarClicked);\n  }\n\n  componentDidUpdate() {\n    if (this.state.curentIteration > this.iterationPerTrial) {\n      this.advanceTrial();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.whatToShow()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/maishamir/Documents/Web Dev /node/SENG411-HCI-Experiment/src/App.js"],"names":["React","Block","Format","Trial","Introduction","EndScreen","axios","DataSubmissionStatus","Object","freeze","NOT_SUBMITTED","SUCCESFUL","FAILED","App","Component","constructor","props","beginExperiment","event","keyCode","elem","srcElement","target","groupCode","value","setState","showIntro","onSpacebarClicked","state","showInstruction","key","advanceIteration","curentIteration","advanceTrial","currentTrial","addResults","newResult","results","submitHandler","e","preventDefault","console","log","post","process","env","REACT_APP_GOOGLE_SHEETS","then","response","dataSubmitted","catch","error","whatToShow","trialParameters","length","submissionStatusObject","format","n","instructType","Date","now","userID","Math","floor","random","iterationPerTrial","TEXT","BUBBLE","componentDidMount","document","addEventListener","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Block, Format } from './components/Block';\nimport Trial from './components/Trial';\nimport Introduction from './components/Introduction';\nimport EndScreen from './components/EndScreen';\nimport './App.css';\nimport axios from 'axios';\nimport 'dotenv';\n\nexport const DataSubmissionStatus = Object.freeze({\n    NOT_SUBMITTED: 1,\n    SUCCESFUL: 2,\n    FAILED: 3,\n});\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTrial: 0,\n            showInstruction: true,\n            curentIteration: 1,\n            results: [],\n            showIntro: true,\n            dataSubmitted: DataSubmissionStatus.NOT_SUBMITTED,\n        };\n\n        this.userID = Math.floor(Math.random() * 90000) + 10000;\n        this.groupCode = 0;\n\n        this.iterationPerTrial = 3;\n        this.trialParameters = [\n            { format: Format.TEXT, n: 3, instructType: 1 },\n            { format: Format.TEXT, n: 5, instructType: 2 },\n            { format: Format.TEXT, n: 9, instructType: 2 },\n            { format: Format.TEXT, n: 25, instructType: 2 },\n            { format: Format.BUBBLE, n: 3, instructType: 1 },\n            { format: Format.BUBBLE, n: 5, instructType: 2 },\n            { format: Format.BUBBLE, n: 9, instructType: 2 },\n            { format: Format.BUBBLE, n: 25, instructType: 2 },\n        ];\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.onSpacebarClicked);\n    }\n\n    componentDidUpdate() {\n        if (this.state.curentIteration > this.iterationPerTrial) {\n            this.advanceTrial();\n        }\n    }\n\n    beginExperiment = (event) => {\n        if (event.keyCode === 13) {\n            var elem = event.srcElement || event.target;\n            this.groupCode = elem.value;\n            this.setState({\n                showIntro: false,\n            });\n        }\n    };\n\n    onSpacebarClicked = (event) => {\n        if (\n            this.state.showInstruction &&\n            (event.key === 'Spacebar' ||\n                event.key === ' ' ||\n                event.keyCode === 32)\n        ) {\n            this.setState({\n                showInstruction: false,\n            });\n        }\n    };\n\n    advanceIteration = () => {\n        this.setState({\n            curentIteration: this.state.curentIteration + 1,\n        });\n    };\n\n    advanceTrial = () => {\n        this.setState({\n            currentTrial: this.state.currentTrial + 1,\n            curentIteration: 1,\n            showInstruction: true,\n        });\n    };\n\n    addResults = (newResult) => {\n        this.setState({\n            results: [...this.state.results, newResult],\n        });\n    };\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        console.log(this.state.results);\n\n        axios\n            .post(`${process.env.REACT_APP_GOOGLE_SHEETS}`, this.state.results)\n            .then((response) => {\n                console.log(response);\n                this.setState({\n                    dataSubmitted: DataSubmissionStatus.SUCCESFUL,\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({\n                    dataSubmitted: DataSubmissionStatus.FAILED,\n                });\n            });\n    };\n\n    whatToShow = () => {\n        if (this.state.showIntro) {\n            return <Introduction onBeginExperiment={this.beginExperiment} />;\n        } else if (this.state.currentTrial === this.trialParameters.length) {\n            var submissionStatusObject = null;\n\n            if (this.state.dataSubmitted === DataSubmissionStatus.SUCCESFUL) {\n                submissionStatusObject = (\n                    <div className={'submittedSuccessfully'}>\n                        Data submission complete\n                    </div>\n                );\n            } else if (\n                this.state.dataSubmitted === DataSubmissionStatus.FAILED\n            ) {\n                submissionStatusObject = (\n                    <div className={'submittedFailed'}>\n                        Data submission failed\n                    </div>\n                );\n            }\n\n            return (\n                <EndScreen\n                    results={this.state.results}\n                    showSubmitButton={\n                        this.state.dataSubmitted ===\n                        DataSubmissionStatus.NOT_SUBMITTED\n                    }\n                    submissionStatusObject={submissionStatusObject}\n                    onSubmit={this.submitHandler}\n                />\n            );\n        } else {\n            return (\n                <Trial\n                    format={\n                        this.trialParameters[this.state.currentTrial].format\n                    }\n                    n={this.trialParameters[this.state.currentTrial].n}\n                    showInstruction={this.state.showInstruction}\n                    instructType={\n                        this.trialParameters[this.state.currentTrial]\n                            .instructType\n                    }\n                    curentIteration={this.state.curentIteration}\n                >\n                    <Block\n                        format={\n                            this.trialParameters[this.state.currentTrial].format\n                        }\n                        n={this.trialParameters[this.state.currentTrial].n}\n                        startTime={Date.now()}\n                        curentIteration={this.state.curentIteration}\n                        advanceIteration={this.advanceIteration}\n                        experimentSeed={this.groupCode}\n                        userID={this.userID}\n                        addResults={this.addResults}\n                    />\n                </Trial>\n            );\n        }\n    };\n\n    render() {\n        return <div className=\"App\">{this.whatToShow()}</div>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}