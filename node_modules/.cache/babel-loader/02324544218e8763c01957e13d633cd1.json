{"ast":null,"code":"import _classCallCheck from\"/Users/maishamir/Documents/Web Dev /node/SENG411-HCI-Experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/maishamir/Documents/Web Dev /node/SENG411-HCI-Experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/maishamir/Documents/Web Dev /node/SENG411-HCI-Experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/maishamir/Documents/Web Dev /node/SENG411-HCI-Experiment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import*as d3 from'd3';import*as seedrandom from'seedrandom';import{jsx as _jsx}from\"react/jsx-runtime\";export var Format=Object.freeze({TEXT:'Text',BUBBLE:'Bubble'});export var Block=/*#__PURE__*/function(_React$Component){_inherits(Block,_React$Component);var _super=_createSuper(Block);function Block(props){var _this;_classCallCheck(this,Block);_this=_super.call(this,props);_this.logOnClickResult=function(d,values){var _this$props=_this.props,format=_this$props.format,n=_this$props.n,startTime=_this$props.startTime,curentIteration=_this$props.curentIteration,advanceIteration=_this$props.advanceIteration,experimentSeed=_this$props.experimentSeed,userID=_this$props.userID,addResults=_this$props.addResults;var endTime=Date.now();var diffInSeconds=(endTime-startTime)/1000;var reactionTime=Math.round((diffInSeconds+Number.EPSILON)*100)/100;var selectedAnswer=d.srcElement.__data__;var correctAnswer=d3.max(values);var maxVal=d3.max(values);var minVal=d3.min(values);var error=Math.abs((correctAnswer-selectedAnswer)/(maxVal-minVal));var roundedError=Math.round((error+Number.EPSILON)*1000)/1000;var results={'Group code':experimentSeed,'User ID':userID,Format:format,'Number of values':n,Iteration:curentIteration,'Reaction time (seconds)':reactionTime,'Error (0-1)':roundedError};console.log(results);addResults(results);advanceIteration();};_this.RenderBlock=function(){// Get SVG and clear it before rendering\nd3.selectAll('svg > *').remove();var svg=d3.select(_this.blockRef.current);var _this$props2=_this.props,format=_this$props2.format,n=_this$props2.n,curentIteration=_this$props2.curentIteration,experimentSeed=_this$props2.experimentSeed;// The canvas size\nvar width=400;var height=400;var NB_VALUES=n;// Seeded randomizer\nvar random=seedrandom(\"\".concat(experimentSeed).concat(format).concat(n).concat(curentIteration));// the randomly generated set of values between 0 and 99\nvar values=d3.range(NB_VALUES).map(function(d){return Math.floor(random()*100);});var pad=5;//padding for grid layout (text and bubble)\nvar numCol,numRow;// number of columns, number of rows\nvar font_size;if(NB_VALUES===25){numCol=5;numRow=5;font_size=48;}else if(NB_VALUES===3||NB_VALUES===5||NB_VALUES===9){numCol=3;numRow=3;font_size=48;}else{return null;}var _w=width/numCol;var _h=height/numRow;var scales={};scales.x=d3.scalePoint().range([0,_w]).padding(0.5).align(1);scales.y=d3.scaleBand().range([0,_h]).paddingInner(0.3);var maxCircleRadius=d3.min([scales.y.bandwidth(),scales.x.step()])/2;var sign=svg.selectAll('g').data(values).enter().append('g').attr('transform',function(d,i){return'translate('+(i%numCol*_w+pad/2*-1)+','+(Math.floor(i/numRow)*_h+pad/2*-1)+')';}).on('click',function(d){return _this.logOnClickResult(d,values);}).style('cursor','pointer');if(format===Format.BUBBLE){//that's to create a perceptual scaling by mapping square root of value to radius, but other scaling functions could be used\nvar circleRadiusScale=d3.scaleLinear().domain([Math.sqrt(d3.min(values)),Math.sqrt(d3.max(values))]).range([5,maxCircleRadius]);//create an 'invisible' circle of size half the max size of a bubble, simply to make it possible to click the smaller circles easily.\nsign.append('circle').attr('cx',_w/2).attr('cy',_w/2).attr('r',maxCircleRadius/2).style('fill','white');// then, for each cell we appends a circle\nsign.append('circle').attr('cx',_w/2).attr('cy',_w/2).attr('r',function(d){return circleRadiusScale(Math.sqrt(d));}).style('fill','black');}else if(format===Format.TEXT){//create an 'invisible' circle of size half the max size of a bubble, simply to make it possible to click the smaller circles easily.\nsign.append('circle').attr('cx',_w/2).attr('cy',_w/2).attr('r',maxCircleRadius/2).style('fill','white');sign.append('text').attr('x',_w/2).attr('y',_w/2).attr('text-anchor','middle').attr('font-size',font_size+'px').text(function(d){return d;});}};_this.blockRef=/*#__PURE__*/React.createRef();return _this;}_createClass(Block,[{key:\"componentDidMount\",value:function componentDidMount(){this.RenderBlock();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.RenderBlock();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"svg\",{ref:this.blockRef,style:{height:400,width:400}});}}]);return Block;}(React.Component);","map":{"version":3,"sources":["/Users/maishamir/Documents/Web Dev /node/SENG411-HCI-Experiment/src/components/Block.js"],"names":["React","d3","seedrandom","Format","Object","freeze","TEXT","BUBBLE","Block","props","logOnClickResult","d","values","format","n","startTime","curentIteration","advanceIteration","experimentSeed","userID","addResults","endTime","Date","now","diffInSeconds","reactionTime","Math","round","Number","EPSILON","selectedAnswer","srcElement","__data__","correctAnswer","max","maxVal","minVal","min","error","abs","roundedError","results","Iteration","console","log","RenderBlock","selectAll","remove","svg","select","blockRef","current","width","height","NB_VALUES","random","range","map","floor","pad","numCol","numRow","font_size","_w","_h","scales","x","scalePoint","padding","align","y","scaleBand","paddingInner","maxCircleRadius","bandwidth","step","sign","data","enter","append","attr","i","on","style","circleRadiusScale","scaleLinear","domain","sqrt","text","createRef","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport * as seedrandom from 'seedrandom';\n\nexport const Format = Object.freeze({ TEXT: 'Text', BUBBLE: 'Bubble' });\n\nexport class Block extends React.Component {\n    constructor(props) {\n        super(props);\n        this.blockRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.RenderBlock();\n    }\n\n    componentDidUpdate() {\n        this.RenderBlock();\n    }\n\n    logOnClickResult = (d, values) => {\n        const {\n            format,\n            n,\n            startTime,\n            curentIteration,\n            advanceIteration,\n            experimentSeed,\n            userID,\n            addResults,\n        } = this.props;\n\n        const endTime = Date.now();\n        const diffInSeconds = (endTime - startTime) / 1000;\n        const reactionTime =\n            Math.round((diffInSeconds + Number.EPSILON) * 100) / 100;\n\n        const selectedAnswer = d.srcElement.__data__;\n        const correctAnswer = d3.max(values);\n\n        const maxVal = d3.max(values);\n        const minVal = d3.min(values);\n\n        const error = Math.abs(\n            (correctAnswer - selectedAnswer) / (maxVal - minVal)\n        );\n        const roundedError = Math.round((error + Number.EPSILON) * 1000) / 1000;\n\n        const results = {\n            'Group code': experimentSeed,\n            'User ID': userID,\n            Format: format,\n            'Number of values': n,\n            Iteration: curentIteration,\n            'Reaction time (seconds)': reactionTime,\n            'Error (0-1)': roundedError,\n        };\n\n        console.log(results);\n\n        addResults(results);\n        advanceIteration();\n    };\n\n    RenderBlock = () => {\n        // Get SVG and clear it before rendering\n        d3.selectAll('svg > *').remove();\n        const svg = d3.select(this.blockRef.current);\n\n        const { format, n, curentIteration, experimentSeed } = this.props;\n\n        // The canvas size\n        var width = 400;\n        var height = 400;\n\n        const NB_VALUES = n;\n\n        // Seeded randomizer\n        const random = seedrandom(\n            `${experimentSeed}${format}${n}${curentIteration}`\n        );\n\n        // the randomly generated set of values between 0 and 99\n        var values = d3.range(NB_VALUES).map((d) => Math.floor(random() * 100));\n\n        var pad = 5; //padding for grid layout (text and bubble)\n        var numCol, numRow; // number of columns, number of rows\n        var font_size;\n\n        if (NB_VALUES === 25) {\n            numCol = 5;\n            numRow = 5;\n            font_size = 48;\n        } else if (NB_VALUES === 3 || NB_VALUES === 5 || NB_VALUES === 9) {\n            numCol = 3;\n            numRow = 3;\n            font_size = 48;\n        } else {\n            return null;\n        }\n\n        const _w = width / numCol;\n        const _h = height / numRow;\n\n        const scales = {};\n        scales.x = d3.scalePoint().range([0, _w]).padding(0.5).align(1);\n        scales.y = d3.scaleBand().range([0, _h]).paddingInner(0.3);\n\n        const maxCircleRadius =\n            d3.min([scales.y.bandwidth(), scales.x.step()]) / 2;\n\n        var sign = svg\n            .selectAll('g')\n            .data(values)\n            .enter()\n            .append('g')\n            .attr('transform', function (d, i) {\n                return (\n                    'translate(' +\n                    ((i % numCol) * _w + (pad / 2) * -1) +\n                    ',' +\n                    (Math.floor(i / numRow) * _h + (pad / 2) * -1) +\n                    ')'\n                );\n            })\n            .on('click', (d) => this.logOnClickResult(d, values))\n            .style('cursor', 'pointer');\n\n        if (format === Format.BUBBLE) {\n            //that's to create a perceptual scaling by mapping square root of value to radius, but other scaling functions could be used\n            var circleRadiusScale = d3\n                .scaleLinear()\n                .domain([Math.sqrt(d3.min(values)), Math.sqrt(d3.max(values))])\n                .range([5, maxCircleRadius]);\n\n            //create an 'invisible' circle of size half the max size of a bubble, simply to make it possible to click the smaller circles easily.\n            sign.append('circle')\n                .attr('cx', _w / 2)\n                .attr('cy', _w / 2)\n                .attr('r', maxCircleRadius / 2)\n                .style('fill', 'white');\n\n            // then, for each cell we appends a circle\n            sign.append('circle')\n                .attr('cx', _w / 2)\n                .attr('cy', _w / 2)\n                .attr('r', (d) => circleRadiusScale(Math.sqrt(d)))\n                .style('fill', 'black');\n        } else if (format === Format.TEXT) {\n            //create an 'invisible' circle of size half the max size of a bubble, simply to make it possible to click the smaller circles easily.\n            sign.append('circle')\n                .attr('cx', _w / 2)\n                .attr('cy', _w / 2)\n                .attr('r', maxCircleRadius / 2)\n                .style('fill', 'white');\n\n            sign.append('text')\n                .attr('x', _w / 2)\n                .attr('y', _w / 2)\n                .attr('text-anchor', 'middle')\n                .attr('font-size', font_size + 'px')\n                .text((d) => d);\n        }\n    };\n\n    render() {\n        return (\n            <svg ref={this.blockRef} style={{ height: 400, width: 400 }}></svg>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}